TYPE "MSG_CONFIG"
VERSION : 0.1
   STRUCT
      Reaction : Array[0..$SM_TOT$] of Int := $ARRAY_LENGHT$($DEFAULT_REACTION$);   // Reazione Scaturita dal msg 0 = None,  1 = store, 2 = pause, 3 = Halt
      Class : Int;
      Nb : Int;
   END_STRUCT;

END_TYPE

TYPE "MSG_SQL"
VERSION : 0.1
   STRUCT
      Stored : Bool;
      StoreForAll : Bool;   // Se 1 il msg viene salvato su SQL per tutti gli FO attivi su tutte le macchine a stati
   END_STRUCT;

END_TYPE

TYPE "MSG_GEN"
VERSION : 0.1
   STRUCT
      Trigger { S7_SetPoint := 'True'} : Bool;   // Trigger del msg, se 1 il messaggio viene visualizzato e viene generato il relativo comando di pausa o stop configurato
      Active : Bool;   // Message Is Active
      Config : "Msg_CONFIG";
      Sql : "Msg_SQL";
   END_STRUCT;

END_TYPE

TYPE "MSG_GEN_CONFIG"
VERSION : 0.1
   STRUCT
      MsgHmiWordNb : Int;
      MsgMaxNb : Int;   // Numero massimo dei messaggi = lunghezza array Msg
      MsgMaxSM : Int;   // Numero di Macchine a stati utilizzate 
   END_STRUCT;

END_TYPE

TYPE "MSG_REACTION_COMMANDS"
VERSION : 0.1
   STRUCT
      Pause : Bool;   // Comando di pausa generato da uno o piu msg
      Stop : Bool;   // Comando di halt generato da uno o più msg
   END_STRUCT;

END_TYPE

TYPE "MSG_RESUME"
VERSION : 0.1
   STRUCT
      MsgPendingACK : Bool;
      MsgPendingNO_ACK : Bool;
      MsgPendingSM : Array[0..$SM_TOT$] of Struct
         ACK : Bool;
         NO_ACK : Bool;
      END_STRUCT;
   END_STRUCT;

END_TYPE

TYPE "MSG"
VERSION : 0.1
   STRUCT
      Msg : Array[0..$MSG_NUMBER$] of "Msg_GEN";
      Msg_Hmi : Array[0..$WORD_NUMBER$] of Word;
      MsgReactionCommand : Array[0..$SM_TOT$] of "Msg_REACTION_COMMANDS";
      MsgRecap : "Msg_RESUME";
      Config : "Msg_GEN_CONFIG";
      Ack { S7_SetPoint := 'True'} : Bool;
      AckCounter : Int;
   END_STRUCT;

END_TYPE

TYPE "MSG_REACTION_SUM"
VERSION : 0.1
   STRUCT
      None : Int;   // Somma dei messaggi attivi che hanno reazione NONE
      Pause : Int;   // Somma dei messaggi attivi che hanno reazione PAUSE
      Stop : Int;   // Somma dei messaggi attivi che hanno reazione HALT
   END_STRUCT;

END_TYPE

